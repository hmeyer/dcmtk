.TH "dcmpschk" 1 "20 Dec 2005" "Version Version 3.5.4" "OFFIS DCMTK" \" -*- nroff -*-
.nh
.SH NAME
dcmpschk \- Checking tool for presentation states
.SH "SYNOPSIS"
.PP
.PP
.nf

dcmpschk [options] [filename_in...]
.fi
.PP
.SH "DESCRIPTION"
.PP
The \fBdcmpschk\fP utility checks DICOM Grayscale Softcopy Presentation State objects for conformance with the standard. The test is performed in three phases:
.PP
.PD 0
.IP "\(bu" 2
Phase 1 checks the Meta-header of the DICOM file. It is tested whether all required attributes are present, whether the SOP class and instance UIDs match the UIDs in the main object and whether the group length attribute contains a correct value. The Transfer Syntax of the Meta header is also checked.
.PP
.PD 0
.IP "\(bu" 2
Phase 2 performs a syntactic check of the values, value representations and value multiplicities for each attribute in the object. The values present in the object under test are compared with the definitions of the DICOM data dictionary.
.PP
.PD 0
.IP "\(bu" 2
Phase 3 performs a semantic check of the integrity of the Presentation State. This phase is omitted when objects of other SOP Classes are encountered. Phase 1 and 2 can also be applied to other DICOM objects of arbitrary SOP class. It should be noted that \fBdcmpschk\fP does not support Presentation States which contain the Mask Module. These will be rejected with a message that the Mask Module is not supported.
.PP
.SH "PARAMETERS"
.PP
.PP
.nf

filename_in  presentation state file(s) to be checked
.fi
.PP
.SH "OPTIONS"
.PP
.SS "general options"
.PP
.nf

  -h  --help
        print this help text and exit

      --version
        print version information and exit

  -v  --verbose
        verbose mode, print actions

  -d  --debug
        debug mode, print debug information

  -l  --logfile  [f]ilename: string
        write output to logfile f
.fi
.PP
.SH "COMMAND LINE"
.PP
All command line tools use the following notation for parameters: square brackets enclose optional values (0-1), three trailing dots indicate that multiple values are allowed (1-n), a combination of both means 0 to n values.
.PP
Command line options are distinguished from parameters by a leading '+' or '-' sign, respectively. Usually, order and position of command line options are arbitrary (i.e. they can appear anywhere). However, if options are mutually exclusive the rightmost appearance is used. This behaviour conforms to the standard evaluation rules of common Unix shells.
.PP
In addition, one or more command files can be specified using an '@' sign as a prefix to the filename (e.g. \fI@command.txt\fP). Such a command argument is replaced by the content of the corresponding text file (multiple whitespaces are treated as a single separator) prior to any further evaluation. Please note that a command file cannot contain another command file. This simple but effective approach allows to summarize common combinations of options/parameters and avoids longish and confusing command lines (an example is provided in file \fIshare/data/dumppat.txt\fP).
.SH "ENVIRONMENT"
.PP
The \fBdcmpschk\fP utility will attempt to load DICOM data dictionaries specified in the \fIDCMDICTPATH\fP environment variable. By default, i.e. if the \fIDCMDICTPATH\fP environment variable is not set, the file \fI<PREFIX>/lib/dicom.dic\fP will be loaded unless the dictionary is built into the application (default for Windows).
.PP
The default behaviour should be preferred and the \fIDCMDICTPATH\fP environment variable only used when alternative data dictionaries are required. The \fIDCMDICTPATH\fP environment variable has the same format as the Unix shell \fIPATH\fP variable in that a colon (':') separates entries. The data dictionary code will attempt to load each file specified in the \fIDCMDICTPATH\fP environment variable. It is an error if no data dictionary can be loaded.
.SH "COPYRIGHT"
.PP
Copyright (C) 2000-2004 by Kuratorium OFFIS e.V., Escherweg 2, 26121 Oldenburg, Germany. 
