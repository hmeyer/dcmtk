.TH "xml2dsr" 1 "20 Dec 2005" "Version Version 3.5.4" "OFFIS DCMTK" \" -*- nroff -*-
.nh
.SH NAME
xml2dsr \- Convert DICOM SR file and data set to XML
.SH "SYNOPSIS"
.PP
.PP
.nf

xml2dsr [options] xmlfile-in dsrfile-out
.fi
.PP
.SH "DESCRIPTION"
.PP
The \fBxml2dsr\fP utility converts the contents of an XML (Extensible Markup Language) document to DICOM Structured Reporting (SR) format (file format or raw data set). The XML Schema \fIdsr2xml.xsd\fP does not yet follow any standard format. However, the \fBxml2dsr\fP application might be enhanced in this aspect in the future (e. g. by supporting HL7/CDA - Clinical Document Architecture).
.PP
An appropriate XML file can be created using the \fBdsr2xml\fP tool (option \fI+Xn\fP recommended to add XML namespace declaration to the root element).
.SH "PARAMETERS"
.PP
.PP
.nf

xmlfile-in   XML input filename to be converted (stdin: "-")

dsrfile-out  DICOM SR output filename
.fi
.PP
.SH "OPTIONS"
.PP
.SS "general options"
.PP
.nf

  -h   --help
         print this help text and exit

       --version
         print version information and exit

  -v   --verbose
         verbose mode, print processing details

  -d   --debug
         debug mode, print debug information
.fi
.PP
.SS "input options"
.PP
.nf

encoding:

  +Ee  --template-envelope
         template element encloses content items
.fi
.PP
.SS "processing options"
.PP
.nf

validation:

  +Vs  --validate-schema
         validate XML document against Schema
         (not with --template-envelope)

  +Vn  --check-namespace
         check XML namespace in document root
.fi
.PP
.SS "output options"
.PP
.nf

output file format:

  +F   --write-file
         write file format (default)

  -F   --write-dataset
         write data set without file meta information

output transfer syntax:

  +t=  --write-xfer-same
         write with same TS as input (default)

  +te  --write-xfer-little
         write with explicit VR little endian TS

  +tb  --write-xfer-big
         write with explicit VR big endian TS

  +ti  --write-xfer-implicit
         write with implicit VR little endian TS

  +td  --write-xfer-deflated
         write with deflated expl. VR little endian TS

post-1993 value representations:

  +u   --enable-new-vr
         enable support for new VRs (UN/UT) (default)

  -u   --disable-new-vr
         disable support for new VRs, convert to OB

group length encoding:

  +g=  --group-length-recalc
         recalculate group lengths if present (default)

  +g   --group-length-create
         always write with group length elements

  -g   --group-length-remove
         always write without group length elements

length encoding in sequences and items:

  +e   --length-explicit
         write with explicit lengths (default)

  -e   --length-undefined
         write with undefined lengths

data set trailing padding (not with --write-dataset):

  -p=  --padding-retain
         do not change padding (default if not --write-dataset)

  -p   --padding-off
         no padding (implicit if --write-dataset)

  +p   --padding-create  [f]ile-pad [i]tem-pad: integer
         align file on multiple of f bytes
         and items on multiple of i bytes
.fi
.PP
.SH "NOTES"
.PP
.SS "DICOM Conformance"
The \fBxml2dsr\fP utility supports the following SOP Classes (according to DICOM 2004 and Supplement 94):
.PP
.PP
.nf

BasicTextSR                 1.2.840.10008.5.1.4.1.1.88.11
EnhancedSR                  1.2.840.10008.5.1.4.1.1.88.22
ComprehensiveSR             1.2.840.10008.5.1.4.1.1.88.33
ProcedureLog                1.2.840.10008.5.1.4.1.1.88.40
MammographyCADSR            1.2.840.10008.5.1.4.1.1.88.50
KeyObjectSelectionDocument  1.2.840.10008.5.1.4.1.1.88.59
ChestCADSR                  1.2.840.10008.5.1.4.1.1.88.65
XRayRadiationDoseSR         1.2.840.10008.5.1.4.1.1.88.67
.fi
.PP
.PP
Please note that currently only mandatory and some optional attributes are supported.
.SH "COMMAND LINE"
.PP
All command line tools use the following notation for parameters: square brackets enclose optional values (0-1), three trailing dots indicate that multiple values are allowed (1-n), a combination of both means 0 to n values.
.PP
Command line options are distinguished from parameters by a leading '+' or '-' sign, respectively. Usually, order and position of command line options are arbitrary (i.e. they can appear anywhere). However, if options are mutually exclusive the rightmost appearance is used. This behaviour conforms to the standard evaluation rules of common Unix shells.
.PP
In addition, one or more command files can be specified using an '@' sign as a prefix to the filename (e.g. \fI@command.txt\fP). Such a command argument is replaced by the content of the corresponding text file (multiple whitespaces are treated as a single separator) prior to any further evaluation. Please note that a command file cannot contain another command file. This simple but effective approach allows to summarize common combinations of options/parameters and avoids longish and confusing command lines (an example is provided in file \fIshare/data/dumppat.txt\fP).
.SH "ENVIRONMENT"
.PP
The \fBxml2dsr\fP utility will attempt to load DICOM data dictionaries specified in the \fIDCMDICTPATH\fP environment variable. By default, i.e. if the \fIDCMDICTPATH\fP environment variable is not set, the file \fI<PREFIX>/lib/dicom.dic\fP will be loaded unless the dictionary is built into the application (default for Windows).
.PP
The default behaviour should be preferred and the \fIDCMDICTPATH\fP environment variable only used when alternative data dictionaries are required. The \fIDCMDICTPATH\fP environment variable has the same format as the Unix shell \fIPATH\fP variable in that a colon (':') separates entries. The data dictionary code will attempt to load each file specified in the \fIDCMDICTPATH\fP environment variable. It is an error if no data dictionary can be loaded.
.SH "FILES"
.PP
\fIlib/dsr2xml.xsd\fP - XML Schema file
.SH "SEE ALSO"
.PP
\fBdsr2xml\fP(1)
.SH "COPYRIGHT"
.PP
Copyright (C) 2003-2005 by Kuratorium OFFIS e.V., Escherweg 2, 26121 Oldenburg, Germany. 
