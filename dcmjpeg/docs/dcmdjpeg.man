/*!

\if MANPAGES
\page dcmdjpeg Decode JPEG-compressed DICOM file
\else
\page dcmdjpeg dcmdjpeg: Decode JPEG-compressed DICOM file
\endif

\section synopsis SYNOPSIS

\verbatim
dcmdjpeg [options] dcmfile-in dcmfile-out
\endverbatim

\section description DESCRIPTION

The \b dcmdjpeg utility reads a JPEG-compressed DICOM image (\e dicomfile-in),
decompresses the JPEG data (i. e. conversion to a native DICOM transfer syntax)
and writes the converted image to an output file (\e dicomfile-out).

\section parameters PARAMETERS

\verbatim
dcmfile-in   DICOM input filename to be converted

dcmfile-out  DICOM output filename
\endverbatim

\section options OPTIONS

\subsection general_options general options
\verbatim
  -h    --help
          print this help text and exit

        --version
          print version information and exit

  -v    --verbose
          verbose mode, print processing details

  -d    --debug
          debug mode, print debug information
\endverbatim

\subsection input_options input options

\verbatim
input file format:

  +f    --read-file
          read file format or data set (default)

  +fo   --read-file-only
          read file format only

  -f    --read-dataset
          read data set without file meta information

  # This option allows to decompress JPEG compressed DICOM objects that have
  # been stored as dataset without meta-header. Such a thing should not exist
  # since the transfer syntax cannot be reliably determined without meta-header,
  # but unfortunately it does.
\endverbatim

\subsection processing_options processing options

\verbatim
color space conversion options:

  +cp   --conv-photometric
          convert if YCbCr photom. interpr. (default)

  # If the compressed image uses YBR_FULL or YBR_FULL_422 photometric
  # interpretation, convert to RGB during decompression.

  +cl   --conv-lossy
          convert YCbCr to RGB if lossy JPEG

  # If the compressed image is encoded in lossy JPEG, assume YCbCr
  # color model and convert to RGB.

  +ca   --conv-always
          always convert YCbCr to RGB

  # If the compressed image is a color image, assume YCbCr color model
  # and convert to RGB.

  +cn   --conv-never
          never convert color space

  # Never convert color space during decompression.

planar configuration options:

  +pa   --planar-auto
          automatically determine planar configuration
          from SOP class and color space (default)

  # If the compressed image is a color image, store in color-by-plane
  # planar configuration if required by the SOP class and photometric
  # interpretation. Hardcopy Color images are always stored color-by-
  # plane, and the revised Ultrasound image objects are stored color-by-
  # plane if the color model is YBR_FULL.  Everything else is stored
  # color-by-pixel.

  +px   --color-by-pixel
          always store color-by-pixel

  # If the compressed image is a color image, store in color-by-pixel
  # planar configuration.

  +pl   --color-by-plane
          always store color-by-plane

  # If the compressed image is a color image, store in color-by-plane
  # planar configuration.

SOP Instance UID options:

  +ud   --uid-default
          keep same SOP Instance UID (default)

  #  Never assigns a new SOP instance UID.

  +ua   --uid-always
          always assign new UID

  # Always assigns a new SOP instance UID
\endverbatim

\subsection output_options output options

\verbatim
output file format:

  +F    --write-file
          write file format (default)

  -F    --write-dataset
          write data set without file meta information

output transfer syntax:

  +te   --write-xfer-little
          write with explicit VR little endian (default)

  +tb   --write-xfer-big
          write with explicit VR big endian TS

  +ti   --write-xfer-implicit
          write with implicit VR little endian TS

post-1993 value representations:

  +u    --enable-new-vr
          enable support for new VRs (UN/UT) (default)

  -u    --disable-new-vr
          disable support for new VRs, convert to OB

group length encoding:

  +g=   --group-length-recalc
          recalculate group lengths if present (default)

  +g    --group-length-create
          always write with group length elements

  -g    --group-length-remove
          always write without group length elements

length encoding in sequences and items:

  +e    --length-explicit
          write with explicit lengths (default)

  -e    --length-undefined
          write with undefined lengths

data set trailing padding (not with --write-dataset):

  -p=   --padding-retain
          do not change padding (default if not --write-dataset)

  -p    --padding-off
          no padding (implicit if --write-dataset)

  +p    --padding-create  [f]ile-pad [i]tem-pad: integer
          align file on multiple of f bytes
          and items on multiple of i bytes
\endverbatim

\section command_line COMMAND LINE

All command line tools use the following notation for parameters: square
brackets enclose optional values (0-1), three trailing dots indicate that
multiple values are allowed (1-n), a combination of both means 0 to n values.

Command line options are distinguished from parameters by a leading '+' or '-'
sign, respectively.  Usually, order and position of command line options are
arbitrary (i.e. they can appear anywhere).  However, if options are mutually
exclusive the rightmost appearance is used.  This behaviour conforms to the
standard evaluation rules of common Unix shells.

In addition, one or more command files can be specified using an '@' sign as a
prefix to the filename (e.g. <em>\@command.txt</em>).  Such a command argument
is replaced by the content of the corresponding text file (multiple
whitespaces are treated as a single separator) prior to any further
evaluation.  Please note that a command file cannot contain another command
file.  This simple but effective approach allows to summarize common
combinations of options/parameters and avoids longish and confusing command
lines (an example is provided in file <em>share/data/dumppat.txt</em>).

\section environment ENVIRONMENT

The \b dcmdjpeg utility will attempt to load DICOM data dictionaries specified
in the \e DCMDICTPATH environment variable.  By default, i.e. if the
\e DCMDICTPATH environment variable is not set, the file
<em>\<PREFIX\>/lib/dicom.dic</em> will be loaded unless the dictionary is built
into the application (default for Windows).

The default behaviour should be preferred and the \e DCMDICTPATH environment
variable only used when alternative data dictionaries are required.  The
\e DCMDICTPATH environment variable has the same format as the Unix shell
\e PATH variable in that a colon (":") separates entries.  The data dictionary
code will attempt to load each file specified in the \e DCMDICTPATH
environment variable.  It is an error if no data dictionary can be loaded.

\section see_also SEE ALSO

<b>dcmcjpeg</b>(1)

\section copyright COPYRIGHT

Copyright (C) 2001-2005 by Kuratorium OFFIS e.V., Escherweg 2, 26121 Oldenburg,
Germany.

*/