/*!

\if MANPAGES
\page wlmscpfs DICOM Basic Worklist Management SCP (based on data files)
\else
\page wlmscpfs wlmscpfs: DICOM Basic Worklist Management SCP (based on data files)
\endif

\section synopsis SYNOPSIS
\verbatim
wlmscpfs [options] port
\endverbatim

\section description DESCRIPTION

The \b wlmscpfs application implements a Service Class Provider (SCP) for the 
Basic Worklist Management Service.  The application will listen on a specified 
TCP/IP port for incoming association requests from a Worklist Management SCU. 
In case an association was acknowledged and a worklist query was received, the 
\b wlmscpfs application will query particular files in a certain directory 
(which can be specified through corresponding program options) on the file 
system for corresponding worklist information, and it will send this 
information back to the calling Worklist Management SCU.  Aside from dealing 
with Worklist Management queries, the \b wlmscpfs application also supports 
the Verification Service Class as an SCP.

\section parameters PARAMETERS

\verbatim
port  tcp/ip port number to listen on
\endverbatim

\section options OPTIONS
\subsection general_options general options
\verbatim
  -h    --help
          print this help text and exit

        --version
          print version information and exit

  -v    --verbose
          verbose mode, print processing details

  -d    --debug
          debug mode, print debug information

  -s    --single-process
          single process mode

  -nse  --no-sq-expansion
          disable expansion of empty sequences
          in C-FIND request messages

  -dfp  --data-files-path  [p]ath: string
          path to worklist data files (default: /home/www/wlist)

  -efr    --enable-file-reject
          enable rejection of incomplete worklist-files
          (default)

  -dfr    --disable-file-reject
          disable rejection of incomplete worklist-files
\endverbatim

\subsection returned_character_set_options returned character set options
\verbatim
  -cs0  --return-no-char-set
          return no specific character set (default)

  -cs1  --return-iso-ir-100
          return specific character set ISO IR 100
\endverbatim

\subsection network_options network options
\verbatim
preferred network transfer syntaxes:

  +x=   --prefer-uncompr
          prefer explicit VR local byte order (default)

  +xe   --prefer-little
          prefer explicit VR little endian TS

  +xb   --prefer-big
          prefer explicit VR big endian TS

  +xi   --implicit
          accept implicit VR little endian TS only

network host access control (tcp wrapper) options:

  -ac   --access-full
          accept connections from any host (default)

  +ac   --access-control
          enforce host access control rules

other network options:

  -ta   --acse-timeout  [s]econds: integer (default: 30)
          timeout for ACSE messages

  -td   --dimse-timeout  [s]econds: integer (default: unlimited)
          timeout for DIMSE messages

        --max-associations  [a]ssocs: integer (default: 50)
          limit maximum number of parallel associations

        --refuse
          refuse association

        --reject
          reject association if no implementation class UID

        --no-fail
          don't fail on an invalid query

        --sleep-after  [s]econds: integer
          sleep s seconds after find (default: 0)

        --sleep-during  [s]econds: integer
          sleep s seconds during find (default: 0)

  -pdu  --max-pdu  [n]umber of bytes: integer [4096..131072]
          set max receive pdu to n bytes (default: 16384)

  -dhl  --disable-host-lookup
          disable hostname lookup

group length encoding (when sending C-FIND response data):

  +g=   --group-length-recalc
          recalculate group lengths if present (default)

  +g    --group-length-create
          always write with group length elements

  -g    --group-length-remove
          always write without group length elements

length encoding in sequences and items
(when sending C-FIND response data):

  +e    --length-explicit
          write with explicit lengths (default)

  -e    --length-undefined
          write with undefined lengths
\endverbatim

\subsection encoding_options encoding options
\verbatim
post-1993 value representations:

  +u    --enable-new-vr
          enable support for new VRs (UN/UT) (default)

  -u    --disable-new-vr
          disable support for new VRs, convert to OB
\endverbatim

\section notes NOTES

The semantic impacts of the above mentioned options is clear for the majority
of options.  Some particular options, however, are so specific that they need
detailed descriptions which will be given in this passage.

The returned character set options are intended for situations in which the
wlmscpfs application will return attribute values which are not composed of
characters from the DICOM default character repertoire.  In such cases, for
example option \e --return-iso-ir-100 can be used to specify that a response
to a modality's worklist management C-FIND request shall always contain
DICOM's Specific Character Set attribute (0008,0005) with a corresponding
value, indicating the character repertoire from which the characters of
returned attribute values were taken (in this example the repertoire ISO IR
100).  Please note that the \b wlmscpfs application will not make sure that all
returned values are actually made up of this character repertoire; the
application expects this to be the case.  Option \e --return-iso-ir-100 will
only lead to the inclusion of the Specific Character Set attribute (0008,0005)
with a corresponding value in a worklist management C-FIND response.

Please note that a C-FIND request which is handled by this application may
contain DICOM's Specific Character Set attribute (0008,0005), but this
application will never use this attribute's value for matching.  Besides, the
question if DICOM's Specific Character Set attribute (0008,0005) will be
contained in a C-FIND response which is returned by this application is always
determined by the returned character set option which was specified when this
application was started.

The options --enable-file-reject and --disable-file-reject can be used to
enable or disable a file rejection mechanism which makes sure only complete
worklist files will be used during the matching process. A worklist file is
considered to be complete if it contains all necessary type 1 information which
the SCP might have to return to an SCU in a C-Find response message. Table K.6-1
in part 4 annex K of the DICOM standard lists all corresponding type 1
attributes (see column "Return Key Type").

\subsection dicom_conformance DICOM Conformance

The \b wlmscpfs application supports the following SOP Classes as an SCP:

\verbatim
VerificationSOPClass                  1.2.840.10008.1.1
FINDModalityWorklistInformationModel  1.2.840.10008.5.1.4.31
\endverbatim

The \b wlmscpfs application will accept presentation contexts for all of the
abovementioned supported SOP Classes using any of the transfer syntaxes:

\verbatim
LittleEndianImplicitTransferSyntax    1.2.840.10008.1.2
LittleEndianExplicitTransferSyntax    1.2.840.10008.1.2.1
BigEndianExplicitTransferSyntax       1.2.840.10008.1.2.2
\endverbatim

The default behaviour of the wlmscpfs application is to prefer transfer
syntaxes having an explicit encoding over the default implicit transfer
syntax.  If \b wlmscpfs is running on big-endian hardware it will prefer
BigEndianExplicitTransferSyntax over LittleEndianExplicitTransferSyntax (and
vice versa).  This behaviour can be changed with the \e --prefer options
(see above).

The \b wlmscpfs application does not support extended negotiation.

Currently, the \b wlmscpfs application supports the following attributes as
matching keys:

\verbatim
(0008,0050) AccessionNumber
(0008,0090) ReferringPhysiciansName
(0010,0010) PatientsName
(0010,0020) PatientID
(0010,0030) PatientsBirthDate
(0010,0040) PatientsSex
(0032,1032) RequestingPhysician
(0038,0010) AdmissionID
(0040,0100) ScheduledProcedureStepSequence
  (0008,0060) > Modality
  (0040,0001) > ScheduledStationAETitle
  (0040,0002) > ScheduledProcedureStepStartDate
  (0040,0003) > ScheduledProcedureStepStartTime
  (0040,0006) > ScheduledPerformingPhysiciansName
(0040,1001) RequestedProcedureID
(0040,1003) RequestedProcedurePriority
\endverbatim

As return keys the following attributes are currently supported by \b wlmscpfs:

\verbatim
(0008,0005) SpecificCharacterSet
(0008,0050) AccessionNumber
(0008,0080) InstitutionName
(0008,0081) InstitutionAddress
(0008,0090) ReferringPhysiciansName
(0008,1080) AdmittingDiagnosesDescription
(0008,1110) ReferencedStudySequence
  (0008,1150) > ReferencedSOPClassUID
  (0008,1155) > ReferencedSOPInstanceUID
(0008,1120) ReferencedPatientSequence
  (0008,1150) > ReferencedSOPClassUID
  (0008,1155) > ReferencedSOPInstanceUID
(0010,0010) PatientsName
(0010,0020) PatientID
(0010,0030) PatientsBirthDate
(0010,0040) PatientsSex
(0010,1000) OtherPatientIDs
(0010,1001) OtherPatientNames
(0010,1020) PatientsSize
(0010,1030) PatientsWeight
(0010,1040) PatientsAddress
(0010,1080) MilitaryRank
(0010,2000) MedicalAlerts
(0010,2110) ContrastAllergies
(0010,2160) EthnicGroup
(0010,21a0) SmokingStatus
(0010,21b0) AdditionalPatientHistory
(0010,21c0) PregnancyStatus
(0010,21d0) LastMenstrualDate
(0010,4000) PatientComments
(0020,000d) StudyInstanceUID
(0032,1032) RequestingPhysician
(0032,1033) RequestingService
(0032,1060) RequestedProcedureDescription
(0032,1064) RequestedProcedureCodeSequence
  (0008,0100) > CodeValue
  (0008,0102) > CodingSchemeDesignator
  (0008,0103) > CodingSchemeVersion
  (0008,0104) > CodeMeaning
(0038,0010) AdmissionID
(0038,0011) IssuerOfAdmissionID
(0038,0050) SpecialNeeds
(0038,0300) CurrentPatientLocation
(0038,0500) PatientState
(0040,0100) ScheduledProcedureStepSequence
  (0008,0060) > Modality
  (0032,1070) > RequestedContrastAgent
  (0040,0001) > ScheduledStationAETitle
  (0040,0002) > ScheduledProcedureStepStartDate
  (0040,0003) > ScheduledProcedureStepStartTime
  (0040,0004) > ScheduledProcedureStepEndDate
  (0040,0005) > ScheduledProcedureStepEndTime
  (0040,0006) > ScheduledPerformingPhysiciansName
  (0040,0007) > ScheduledProcedureStepDescription
  (0040,0008) > ScheduledProtocolCodeSequence
    (0008,0100) >  > CodeValue
    (0008,0102) >  > CodingSchemeDesignator
    (0008,0103) >  > CodingSchemeVersion
    (0008,0104) >  > CodeMeaning
  (0040,0009) > ScheduledProcedureStepID
  (0040,0010) > ScheduledStationName
  (0040,0011) > ScheduledProcedureStepLocation
  (0040,0012) > PreMedication
  (0040,0020) > ScheduledProcedureStepStatus
  (0040,0400) > CommentsOnTheScheduledProcedureStep
(0040,1001) RequestedProcedureID
(0040,1002) ReasonForTheRequestedProcedure
(0040,1003) RequestedProcedurePriority
(0040,1004) PatientTransportArrangements
(0040,1005) RequestedProcedureLocation
(0040,1008) ConfidentialityCode
(0040,1009) ReportingPriority
(0040,1010) NamesOfIntendedRecipientsOfResults
(0040,1400) RequestedProcedureComments
(0040,2001) ReasonForTheImagingServiceRequest
(0040,2004) IssueDateOfImagingServiceRequest
(0040,2005) IssueTimeOfImagingServiceRequest
(0040,2008) OrderEnteredBy
(0040,2009) OrderEnterersLocation
(0040,2010) OrderCallbackPhoneNumber
(0040,2016) PlacerOrderNumberImagingServiceRequest
(0040,2017) FillerOrderNumberImagingServiceRequest
(0040,2400) ImagingServiceRequestComments
(0040,3001) ConfidentialityConstraintOnPatientDataDescription
\endverbatim

\subsection access_control Access Control

When compiled on Unix platforms with TCP wrapper support, host-based access
control can be enabled with the \e --access-control command line option.  In
this case the access control rules defined in the system's host access control
tables for \b wlmscpfs are enforced.  The default locations of the host access
control tables are <em>/etc/hosts.allow</em> and <em>/etc/hosts.deny</em>.
Further details are described in <b>hosts_access</b>(5).

\section command_line COMMAND LINE

All command line tools use the following notation for parameters: square
brackets enclose optional values (0-1), three trailing dots indicate that
multiple values are allowed (1-n), a combination of both means 0 to n values.

Command line options are distinguished from parameters by a leading '+' or '-'
sign, respectively.  Usually, order and position of command line options are
arbitrary (i.e. they can appear anywhere).  However, if options are mutually
exclusive the rightmost appearance is used.  This behaviour conforms to the
standard evaluation rules of common Unix shells.

In addition, one or more command files can be specified using an '@' sign as a
prefix to the filename (e.g. <em>\@command.txt</em>).  Such a command argument
is replaced by the content of the corresponding text file (multiple
whitespaces are treated as a single separator) prior to any further
evaluation.  Please note that a command file cannot contain another command
file.  This simple but effective approach allows to summarize common
combinations of options/parameters and avoids longish and confusing command
lines (an example is provided in file <em>share/data/dumppat.txt</em>).

\section environment ENVIRONMENT

The \b wlmscpfs utility will attempt to load DICOM data dictionaries specified
in the \e DCMDICTPATH environment variable.  By default, i.e. if the
\e DCMDICTPATH environment variable is not set, the file
<em>\<PREFIX\>/lib/dicom.dic</em> will be loaded unless the dictionary is built
into the application (default for Windows).

The default behaviour should be preferred and the \e DCMDICTPATH environment
variable only used when alternative data dictionaries are required.  The
\e DCMDICTPATH environment variable has the same format as the Unix shell
\e PATH variable in that a colon (":") separates entries.  The data dictionary
code will attempt to load each file specified in the \e DCMDICTPATH
environment variable.  It is an error if no data dictionary can be loaded.

\section copyright COPYRIGHT

Copyright (C) 1996-2005 by Kuratorium OFFIS e.V., Escherweg 2, 26121 Oldenburg,
Germany.

*/